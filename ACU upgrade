import PySimpleGUI as sg
import os
import pysftp
import paramiko

global hostname


myUsername = "root"
myPassword = "password"
port = 22


def host_status():
# All the stuff inside your window.
    layout = [[sg.Text('Enter ACU IP below')],
              [sg.Text('ACU IP address'), sg.InputText()],
              [sg.Button('Ok'), sg.Button('Cancel')]]

    # Create the Window
    window = sg.Window('ACU Upgrade', layout)
    # Event Loop to process "events" and get the "values" of the inputs
    while True:
        event, values = window.read()
        if event in (None, 'Cancel'):  # if user closes window or clicks cancel
            break
        # print('You entered ', values[0])
        else:

            hostname = (values[0])
            response = os.system("ping " + hostname)

            if response == 0:
                sg.Popup('ACU connected- Please Press OK to continue!')
                print('ACU connected !')
                #print (hostname)

            else:
                sg.Popup('ACU NOT connected')
                print('ACU NOT connected!')
                break
            return hostname
    window.close()


hostname =host_status()
print(hostname)



def version():
    cmd = 'strk -v'

    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(hostname, port, username=myUsername, password=myPassword)

    stdin, stdout, stderr = ssh.exec_command(cmd)
    outlines = stdout.readlines()
    resp = ''.join(outlines)
    sg.text = resp

    # All the stuff inside your window.
    layout = [[sg.Text(
        'If  ACU version is differ than target version Press OK to procced with upgrade otherwise Press Cancel')],
              [sg.Text(resp)],
              [sg.Button('Ok'), sg.Button('Cancel')]]

    # Create the Window
    window = sg.Window('ACU version', layout)
    # Event Loop to process "events" and get the "values" of the inputs
    while True:
        event, values = window.read()
        if event in (None, 'Cancel'):  # if user closes window or clicks cancel
            quit()
            # print(event)
        else:
            print(resp)
            break

version()



def download():
    myHostname = hostname

    cnopts = pysftp.CnOpts()
    cnopts.hostkeys = None

    with pysftp.Connection(host=myHostname, username=myUsername, password=myPassword, cnopts=cnopts) as sftp:
        print("Connection succesfully established ... ")

        # Define the directory that you want to download from the ACU
        remoteFilePath = "/usr/local/etc/"

        dirName = 'C:/Users/cgs-ujainakov/PycharmProjects/' + myHostname
        print(dirName)

        try:
            os.makedirs(dirName)
            print("Directory ", dirName, " Created ")
        except FileExistsError:
            print("Directory ", dirName, " already exists")

        # print(remoteFilePath)

        # Define the local path where the file will be saved
        localFilePath = "C:/Users/cgs-ujainakov/PycharmProjects/" + myHostname + '/'
        # print(localFilePath)

        sftp.get_d(remoteFilePath, localFilePath)

        sg.Popup('Files under /usr/local/etc Successfully Downloaded - CLICK OK to Download files under /root/etc')
        #print('ACU connected !')
            # print (hostname)

download()

def download1():
    myHostname = hostname

    cnopts = pysftp.CnOpts()
    cnopts.hostkeys = None

    with pysftp.Connection(host=myHostname, username=myUsername, password=myPassword, cnopts=cnopts) as sftp:
        print("Connection succesfully established ... ")

        # Define the directory that you want to download from the ACU
        remoteFilePath = "/etc/"

        dirName = 'C:/Users/cgs-ujainakov/PycharmProjects/' + myHostname
        print(dirName)

        # print(remoteFilePath)

        # Define the local path where the file will be saved
        localFilePath = "C:/Users/cgs-ujainakov/PycharmProjects/" + myHostname + '/'
        # print(localFilePath)

        sftp.get_d(remoteFilePath, localFilePath)
        sg.Popup('Files under /root/etc Successfully Downloaded - CLICK OK to UPLOAD upgrade package')
        #print('ACU connected !')
            # print (hostname)

download1()

def upload():
    myHostname = hostname

    cnopts = pysftp.CnOpts()
    cnopts.hostkeys = None

    with pysftp.Connection(host=myHostname, username=myUsername, password=myPassword, cnopts=cnopts) as sftp:
        print("Connection succesfully established ... ")

        # Define the directory that you want to download from the ACU
        # remoteFilePath = "/usr/local/etc/"
        remoteFilePath = "/tmp/test.txt"
        print(remoteFilePath)

        # Define the local path where the file will be saved
        # localFilePath = "C:/Users/cgs-ujainakov/PycharmProjects/"
        localFilePath = "C:/Users/cgs-ujainakov/PycharmProjects/test.txt"
        print(localFilePath)

        # sftp.get_d(remoteFilePath, localFilePath)
        sftp.put(localFilePath, remoteFilePath)
        sg.Popup('ACU Software Successfully Uploaded ')

upload()


def command():
    cmd = 'ls'

    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(hostname, port, username=myUsername, password=myPassword)

    stdin, stdout, stderr = ssh.exec_command(cmd)
    outlines = stdout.readlines()
    resp = ''.join(outlines)
    sg.text = resp

    # All the stuff inside your window.
    layout = [[sg.Text(
        'acu-update')],
              [sg.Text(resp)],
              [sg.Button('Ok'), sg.Button('Cancel')]]

    # Create the Window
    window = sg.Window('ACU Upgrade', layout)
    # Event Loop to process "events" and get the "values" of the inputs
    while True:
        event, values = window.read()
        if event in (None, 'Cancel'):  # if user closes window or clicks cancel
            quit()
            # print(event)
        else:
            print(resp)
            break

command()

# and ssh again and reboot
